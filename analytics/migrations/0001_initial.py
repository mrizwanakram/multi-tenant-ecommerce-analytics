# Generated by Django 5.2.7 on 2025-10-02 07:21

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'customers',
            },
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('domain', models.CharField(max_length=200, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'tenants',
                'indexes': [models.Index(fields=['domain'], name='tenants_domain_726e44_idx'), models.Index(fields=['is_active'], name='tenants_is_acti_ec1713_idx')],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=500)),
                ('sku', models.CharField(max_length=100)),
                ('category', models.CharField(blank=True, max_length=200)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='analytics.tenant')),
            ],
            options={
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_number', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='analytics.customer')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='analytics.tenant')),
            ],
            options={
                'db_table': 'orders',
            },
        ),
        migrations.CreateModel(
            name='MaterializedView',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('view_name', models.CharField(max_length=100)),
                ('group_by', models.CharField(max_length=50)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materialized_views', to='analytics.tenant')),
            ],
            options={
                'db_table': 'materialized_views',
            },
        ),
        migrations.CreateModel(
            name='IngestionJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('idempotency_key', models.CharField(max_length=255, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('total_rows', models.IntegerField(default=0)),
                ('processed_rows', models.IntegerField(default=0)),
                ('failed_rows', models.IntegerField(default=0)),
                ('error_details', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingestion_jobs', to='analytics.tenant')),
            ],
            options={
                'db_table': 'ingestion_jobs',
            },
        ),
        migrations.CreateModel(
            name='ExportJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('format', models.CharField(max_length=10)),
                ('filters', models.JSONField(default=dict)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_size', models.BigIntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('progress', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='export_jobs', to='analytics.tenant')),
            ],
            options={
                'db_table': 'export_jobs',
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='analytics.tenant'),
        ),
        migrations.CreateModel(
            name='PriceHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='analytics.product')),
            ],
            options={
                'db_table': 'price_history',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['product', 'created_at'], name='price_histo_product_e69ef6_idx'), models.Index(fields=['created_at'], name='price_histo_created_be9adc_idx')],
            },
        ),
        migrations.CreateModel(
            name='PriceEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('old_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('new_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('change_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('is_anomaly', models.BooleanField(default=False)),
                ('anomaly_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_events', to='analytics.product')),
            ],
            options={
                'db_table': 'price_events',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['product', 'created_at'], name='price_event_product_9cdae7_idx'), models.Index(fields=['is_anomaly', 'created_at'], name='price_event_is_anom_82fe85_idx'), models.Index(fields=['created_at'], name='price_event_created_20b097_idx')],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='analytics.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='analytics.product')),
            ],
            options={
                'db_table': 'order_items',
                'indexes': [models.Index(fields=['order', 'product'], name='order_items_order_i_f97371_idx'), models.Index(fields=['product', 'created_at'], name='order_items_product_560e92_idx')],
            },
        ),
        migrations.CreateModel(
            name='StockEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('sale', 'Sale'), ('return', 'Return'), ('adjustment', 'Adjustment'), ('restock', 'Restock')], max_length=20)),
                ('quantity_change', models.IntegerField()),
                ('quantity_after', models.IntegerField()),
                ('reference_id', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_events', to='analytics.product')),
            ],
            options={
                'db_table': 'stock_events',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['product', 'created_at'], name='stock_event_product_6ccd61_idx'), models.Index(fields=['event_type', 'created_at'], name='stock_event_event_t_799880_idx'), models.Index(fields=['created_at'], name='stock_event_created_978bfc_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['tenant', 'sku'], name='products_tenant__3575bc_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['tenant', 'category'], name='products_tenant__c80e35_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['tenant', 'price'], name='products_tenant__0d69ae_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['tenant', 'created_at'], name='products_tenant__3eefd6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('tenant', 'sku')},
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['tenant', 'created_at'], name='orders_tenant__5b564e_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['tenant', 'status'], name='orders_tenant__ed6a9d_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['tenant', 'customer'], name='orders_tenant__abc37b_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['tenant', 'total_amount'], name='orders_tenant__afb1f3_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['tenant', 'order_number'], name='orders_tenant__f378ce_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='order',
            unique_together={('tenant', 'order_number')},
        ),
        migrations.AddIndex(
            model_name='materializedview',
            index=models.Index(fields=['tenant', 'view_name', 'group_by'], name='materialize_tenant__235250_idx'),
        ),
        migrations.AddIndex(
            model_name='materializedview',
            index=models.Index(fields=['tenant', 'period_start', 'period_end'], name='materialize_tenant__bf9a21_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='materializedview',
            unique_together={('tenant', 'view_name', 'group_by', 'period_start', 'period_end')},
        ),
        migrations.AddIndex(
            model_name='ingestionjob',
            index=models.Index(fields=['idempotency_key'], name='ingestion_j_idempot_3cb8b9_idx'),
        ),
        migrations.AddIndex(
            model_name='ingestionjob',
            index=models.Index(fields=['tenant', 'status'], name='ingestion_j_tenant__08b280_idx'),
        ),
        migrations.AddIndex(
            model_name='ingestionjob',
            index=models.Index(fields=['created_at'], name='ingestion_j_created_701f2d_idx'),
        ),
        migrations.AddIndex(
            model_name='exportjob',
            index=models.Index(fields=['tenant', 'status'], name='export_jobs_tenant__25ebeb_idx'),
        ),
        migrations.AddIndex(
            model_name='exportjob',
            index=models.Index(fields=['created_at'], name='export_jobs_created_af4995_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['tenant', 'email'], name='customers_tenant__074712_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['tenant', 'name'], name='customers_tenant__072105_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['tenant', 'created_at'], name='customers_tenant__bac0f9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='customer',
            unique_together={('tenant', 'email')},
        ),
    ]
